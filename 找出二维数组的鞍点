找出一个二维数组中的鞍点，即该位置上的元素在该行上最大，在该列上最小，也可能没有鞍点。  
可以按如下思路编程：找出第一行的最大元素。若它也是其所在列最小的元素，则找到鞍点（因为一个二维数组中最多有一个鞍点，后面无需再找了），并输出鞍点；否则继续按照上面的方法在下一行中寻找。若找到最后一行都没有发现鞍点，则该数组没有鞍点。为了便于验证，设该二维数组为4行5列。

输入：
1 2 3 4 5
2 4 6 8 10
3 6 9 12 15
4 8 12 16 20
输出：
a[0][4]=5

输入：
1 12 3 4 5
2 4 16 8 10
3 6 9 12 15
4 8 12 16 20
输出：
It is not exist.


#include<stdio.h>
int main()
{
	int a[4][5],i,j,max;
	for(i=0;i<4;i++)
	{
		for(j=0;j<5;j++)
		{
			scanf("%d",a[i][j]);
		}
	}
	for(i=0;i<4;i++)
	{
		max=0;
		for(j=1;j<5;j++)
		{
			if(a[i][j]>a[i][max]) max=j;
		}
		for(j-0;j<5;j++)
		{
			if(a[j][max]<a[i][max]) break;
		}
		if(j==5) printf("a[%d][%d]=%d",i,max,a[i][max]);
	}
	return 0;
}
